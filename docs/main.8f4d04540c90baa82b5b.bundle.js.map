{"version":3,"file":"main.8f4d04540c90baa82b5b.bundle.js","sources":["webpack:///./stories/materialUI.js"],"sourcesContent":["import React, { cloneElement } from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Switch from '@material-ui/core/Switch';\nimport { ValidationField, createForm } from '../src';\n\nconst rules = {\n  name: {\n    validator: name =>\n      new Promise((res, rej) => {\n        setTimeout(() => {\n          if (name) {\n            res(name);\n          } else {\n            rej(name);\n          }\n        }, 1000);\n      }),\n    message: 'Please input your name',\n  },\n  gender: {\n    validator: gender => gender,\n    message: 'Please choose your gender',\n  },\n  job: {\n    validator: (job, { age }) => job || !age || age < 20,\n    message: 'Please choose your job',\n  },\n  age: {\n    validator: age => age,\n    message: 'Please choose your age',\n  },\n  terms: {\n    validator: agree => agree,\n    message: ' ',\n  },\n};\n\nclass MaterialUIForm extends React.PureComponent {\n  handleSubmit = e => {\n    e.preventDefault();\n    const { submit } = this.props;\n    submit(action('submit-success'), action('submit-fail'))();\n  };\n\n  render() {\n    const {\n      isValid,\n      isSubmitting,\n      isPristine,\n      values,\n      updateFieldValue,\n      initialize,\n    } = this.props;\n    return (\n      <Paper style={{ width: '500px', padding: '40px', margin: '20px' }}>\n        <Typography variant=\"h5\">Sign Up</Typography>\n        <form onSubmit={this.handleSubmit}>\n          <ValidationField name=\"name\" label=\"Name\" isInput>\n            <Input />\n          </ValidationField>\n          <ValidationField name=\"age\" label=\"Age\" isInput>\n            <Select>\n              <MenuItem value=\"\">None</MenuItem>\n              <MenuItem value={10}>Ten</MenuItem>\n              <MenuItem value={20}>Twenty</MenuItem>\n              <MenuItem value={30}>Thirty</MenuItem>\n            </Select>\n          </ValidationField>\n          {values.age > 10 ? (\n            <ValidationField name=\"job\" label=\"Job\" isInput>\n              <Select>\n                <MenuItem value=\"engineer\">Engineer</MenuItem>\n                <MenuItem value=\"doctor\">Doctor</MenuItem>\n                <MenuItem value=\"Teacher\">Teacher</MenuItem>\n              </Select>\n            </ValidationField>\n          ) : null}\n          <ValidationField\n            name=\"gender\"\n            label=\"Gender\"\n            options=\"custom options\">\n            <RadioGroup row>\n              <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n              <FormControlLabel\n                value=\"female\"\n                control={<Radio />}\n                label=\"Female\"/>\n              <FormControlLabel\n                value=\"other\"\n                control={<Radio />}\n                label=\"Other\"/>\n            </RadioGroup>\n          </ValidationField>\n          <ValidationField name=\"birth\" label=\"Date of birth\">\n            <Input label=\"Birthday\" type=\"date\" />\n          </ValidationField>\n          <ValidationField name=\"terms\" valuePropName=\"checked\">\n            <FormControlLabel\n              value=\"terms\"\n              control={<Switch value=\"terms\" />}\n              label=\"I agree to terms\"/>\n          </ValidationField>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!isValid || isSubmitting || !values.terms || isPristine}>\n            Next\n          </Button>\n          <Button\n            onClick={initialize}\n            color=\"primary\"\n            style={{ marginLeft: 10 }}>\n            Reset\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={() => updateFieldValue('gender', 'male', true)}\n            style={{ marginLeft: 10 }}>\n            Set\n          </Button>\n        </form>\n      </Paper>\n    );\n  }\n}\n\nfunction fieldRender({\n  children,\n  id,\n  error,\n  required,\n  validating,\n  label,\n  dataBindProps,\n  isInput,\n}) {\n  const labelNode = isInput ? (\n    <InputLabel htmlFor={id}>{label}</InputLabel>\n  ) : (\n    <FormLabel htmlFor={id}>{label}</FormLabel>\n  );\n  const input = cloneElement(\n    children,\n    Object.assign(\n      {\n        id,\n        ...dataBindProps,\n      },\n      isInput\n        ? {\n            error: error && error.length > 0,\n            endAdornment: validating ? (\n              <InputAdornment position=\"end\">\n                <CircularProgress size={20} />\n                <span />\n              </InputAdornment>\n            ) : null,\n            ...children.props.endAdornment,\n          }\n        : null,\n    ),\n  );\n  return (\n    <FormControl\n      fullWidth\n      error={error && error.length > 0}\n      style={{ marginTop: '6px' }}\n      required={required}>\n      {labelNode}\n      {input}\n      <FormHelperText>{error ? error[0] : ''}</FormHelperText>\n    </FormControl>\n  );\n}\nconst Demo = createForm(\n  {\n    birth: '2018-05-28',\n    terms: false,\n  },\n  rules,\n  { fieldRender },\n)(MaterialUIForm);\nstoriesOf('Form with Material-ui', module).add('profile', () => <Demo />);\n"],"mappings":"AAsBA","sourceRoot":""}